name: Android CI

on:
  pull_request:
    types: [ closed ]
  workflow_dispatch:

jobs:
  build:
    #    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Creating signing store file
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
        run: echo $KEYSTORE | base64 -d > keystore.jks
      - name: Build with Gradle
        env:
          KEY_ALIAS: ${{secrets.KEY_ALIAS}}
          KEY_PASSWORD: ${{secrets.KEY_PASSWORD}}
          KEYSTORE_PASSWORD: ${{secrets.KEYSTORE_PASSWORD}}
        run: ./gradlew :app:assembleRelease --stacktrace
      - name: Collect ipa artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          # Path to the release files
          path: app/build/outputs/apk/release/app-release.apk

  publish:
    name: Release APK to Firebase
    needs: [ build ]
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: acc.json
    steps:
      # Retrieve ipa file from GitHub artifacts
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: 'Create new milestone'
        id: createmilestone
        uses: "WyriHaximus/github-action-create-milestone@v1"
        with:
          title: ${{ steps.semvers.outputs.patch }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Get release-APK from artifacts
        uses: actions/download-artifact@v2
        with:
          name: release-apk
      - name: Preparing firebase credentials
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: echo -n "$FIREBASE_TOKEN" | base64 --decode > "${GOOGLE_APPLICATION_CREDENTIALS}"
      - run: curl -sL https://firebase.tools | bash
      - name: upload artifact to Firebase App Distribution
        run: firebase appdistribution:distribute app-release.apk --app ${{secrets.APP_ID}} --release-notes "Update" --groups "internal_testers"